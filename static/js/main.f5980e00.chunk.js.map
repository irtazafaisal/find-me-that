{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/App.js","index.js","registerServiceWorker.js"],"names":["Business","react_default","a","createElement","className","src","this","props","business","imageSrc","alt","name","address","city","concat","state","zipCode","category","toUpperCase","rating","reviewCount","React","Component","BusinessList","businesses","map","components_Business_Business","key","id","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","term","location","sortBy","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","handleSortByChange","sortByOptions","Best Match","Highest Rated","Most Reviewed","sortByOption","setState","console","log","searchYelp","event","target","value","preventDefault","_this2","keys","sortByOptionValue","getSortByClass","onClick","renderSortByOptions","placeholder","onChange","href","Yelp","search","fetch","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","App","components_SearchBar_SearchBar","components_BusinessList_BusinessList","ReactDOM","render","components_App_App","document","getElementById","navigator","window","addEventListener","swUrl","process","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error"],"mappings":"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","file":"static/js/main.f5980e00.chunk.js","sourcesContent":["import React from 'react';\nimport './Business.css';\n\nclass Business extends React.Component {\n  render() {\n    return (\n      <div className=\"Business\">\n        <div className=\"image-container\">\n          <img src={this.props.business.imageSrc} alt=''/>\n        </div>\n        <h2>{this.props.business.name}</h2>\n        <div className=\"Business-information\">\n          <div className=\"Business-address\">\n            <p>{this.props.business.address}</p>\n            <p>{this.props.business.city}</p>\n            <p>{`${this.props.business.state} ${this.props.business.zipCode}`}</p>\n          </div>\n          <div className=\"Business-reviews\">\n            <h3>{this.props.business.category.toUpperCase()}</h3>\n            <h3 className=\"rating\">{`${this.props.business.rating} stars`}</h3>\n            <p>{`${this.props.business.reviewCount} reviews`}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Business;","import React from 'react';\nimport './BusinessList.css';\n\nimport Business from '../Business/Business';\n\nclass BusinessList extends React.Component {\n  render() {\n    return (\n      <div className=\"BusinessList\">\n        {\n          this.props.businesses.map(business => {\n            return <Business key={business.id} business= {business} />\n          })\n        }\n      </div>\n    );\n  }\n}\n\nexport default BusinessList;","import React from 'react';\nimport './SearchBar.css';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      term: '',\n      location: '',\n      sortBy: 'best_match'\n    };\n\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleSortByChange = this.handleSortByChange.bind(this);\n\n    this.sortByOptions = {\n      'Best Match': 'best_match',\n      'Highest Rated': 'rating',\n      'Most Reviewed': 'review_count'\n    };\n  }\n\n  getSortByClass(sortByOption) {\n    if (this.state.sortBy === sortByOption) {\n      return 'active';\n    }\n    return '';\n  }\n\n  handleSortByChange(sortByOption) {\n    this.setState({sortBy: sortByOption}, function () {\n    console.log('sortBy__' + this.state.sortBy);\n    this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n});\n    console.log('sortByOption__' + sortByOption);\n    \n  }\n\n  handleTermChange(event) {\n    this.setState({term: event.target.value});\n  }\n\n  handleLocationChange(event) {\n    this.setState({location: event.target.value});\n  }\n\n  handleSearch(event) {\n    this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n\n    event.preventDefault();\n  }\n\n  renderSortByOptions() {\n    return Object.keys(this.sortByOptions).map(sortByOption => {\n      let sortByOptionValue = this.sortByOptions[sortByOption];\n      return (<li className={this.getSortByClass(sortByOptionValue)}\n                  key={sortByOptionValue}\n                  onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>\n                {sortByOption}\n             </li>);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <div className=\"SearchBar-sort-options\">\n          <ul>\n            {this.renderSortByOptions()}\n          </ul>\n        </div>\n        <div className=\"SearchBar-fields\">\n          <input placeholder=\"Search Businesses\" onChange={this.handleTermChange} />\n          <input placeholder=\"Where?\" onChange={this.handleLocationChange}/>\n        </div>\n        <div className=\"SearchBar-submit\">\n          <a href=\"javascript:void(0);\" onClick={this.handleSearch}>Let's Go</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;","const apiKey = 'ucyf3sO0qnmGXwi92J0uOCelA1CzKno6eJFeok6-t4EahLGUNj3mrY8gXq96kveIOpNGusei7CzrKgGdjbyt5NRoK-EaUCZxmByzIkgYI40V5VUF66stsOWOgA-TX3Yx';\n\nconst Yelp = {\n    search(term, location, sortBy) {\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\n            headers: {\n                Authorization: `Bearer ${apiKey}`\n            }\n        }).then(response => {\n            return response.json()\n        }).then(jsonResponse => {\n            if (jsonResponse.businesses) {\n                return jsonResponse.businesses.map(business => {\n                    return {\n                        id: business.id,\n                        imageSrc: business.image_url,\n                        name: business.name,\n                        address: business.location.address1,\n                        city: business.location.city,\n                        state: business.location.state,\n                        zipCode: business.location.zip_code,\n                        category: business.categories[0].title,\n                        rating: business.rating,\n                        reviewCount: business.review_count,\n                    };\n                })\n            }\n        });\n    },\n};\n\nexport default Yelp;\n","import React from 'react';\nimport './App.css';\n\nimport BusinessList from '../BusinessList/BusinessList';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Yelp from '../../util/Yelp';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      businesses: []\n    };\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n  \n  searchYelp(term, location, sortBy) {\n    Yelp.search(term, location, sortBy).then(businesses => {\n      this.setState({\n        businesses: businesses\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Find Me That</h1>\n        <SearchBar searchYelp={this.searchYelp} />\n        <BusinessList businesses={this.state.businesses} />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}